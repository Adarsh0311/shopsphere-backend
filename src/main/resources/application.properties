spring.application.name=ShopSphere

server.port=8080

spring.datasource.url=jdbc:postgresql://localhost:5432/shopsphere_db
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true

spring.jpa.properties.hibernate.format_sql=true

spring.jpa.open-in-view=false

# Spring Boot DevTools properties
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# JWT Configuration
application.security.jwt.secret-key=wuSK4LIy+7EwkMO6HgQSwczCyiBZRxiqVSG2buoBUOg=
# 1 Day
application.security.jwt.expiration=86400000

#AWS SQS Configuration for order processing messages
cloud.aws.region.static=us-east-2
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}

aws.sqs.order-processing-queue-name=${AWS_SQS_QUEUE_NAME}

#Stripe API Configuration (TEST)
stripe.api.secret-key=${STRIPE_SECRET_KEY}

# SQS Listener Polling Configuration (Spring Cloud AWS Messaging)
# These control how often and how many messages the listener tries to fetch
spring.cloud.aws.sqs.listener.max-messages-per-poll=10
spring.cloud.aws.sqs.listener.poll-timeout=20

#spring.cloud.aws.sqs.=ON_SUCCESS # Messages are deleted from queue upon successful processing

